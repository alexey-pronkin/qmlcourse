name: deploy-book

on:
  workflow_dispatch:
    inputs:
      DisableCache:
        description: 'Disable cache'
        required: false
        default: 'false'
  push:
    branches: [ master ]

jobs:

  deploy_book:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/qmlcourse.ai

          # - os: macos-latest
          #   label: osx-64
          #   prefix: /Users/runner/miniconda3/envs/qmlcourse.ai

          # - os: windows-latest
          #   label: win-64
          #   prefix: C:\Miniconda3\envs\qmlcourse.ai
    env:
      TF_CPP_MIN_LOG_LEVEL: 3

    steps:
      - name: checkout branch for build
        uses: actions/checkout@v2

      - name: checkout branch with cache
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: ./gh-pages

      - name: copy cache for build book
        if: ${{ github.event.inputs.DisableCache != 'true' }}
        run: |
          cp -r ./gh-pages/_build/ ./qmlcourseRU/ || exit 0

      - name: check locking files
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: |
             poetry.lock
             pyproject.toml

      - name: create or change environment-yml and requirements-*.ymls
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: ./.github/actions/create-requirements@v1

      - name: download a new requirements.yml artifact
        uses: actions/download-artifact@v2
        with:
          name: environment-yml

      - name: install mamba
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          mamba-version: "*"
          channels: conda-forge, defaults
          channel-priority: true
          activate-environment: qmlcourse.ai
          environment-file: environment.yml

      # - name: copy cache dir for dependecies
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-poetry-modules
      #   with:
      #     path: .venv
      #     key: venv2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # Use cache
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}
        id: mamba-cache

      - name: build the book
        run: |
          export DWAVE_TOKEN="${{ secrets.DWAVE_TOKEN }}"
          poetry run jupyter-book build ./qmlcourseRU

      - name: fix sitemap
        run: |
          poetry run python ./tools/fix_sitemap.py ./qmlcourseRU/_build/html/sitemap.xml ./qmlcourseRU/_build/html/sitemap.xml

      - name: gh-pages action
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU

      - name: gh-pages action
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU/_build/html/
          publish_branch: pages-gh
