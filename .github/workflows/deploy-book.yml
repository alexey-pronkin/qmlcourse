name: deploy-book

on:
  workflow_dispatch:
    inputs:
      DisableCache:
        description: 'disable cache'
        required: false
        default: 'false'
  push:
    branches: [ master ]

jobs:

  deploy_book:
    runs-on: ubuntu-latest
    env:
      TF_CPP_MIN_LOG_LEVEL: 3

    steps:
      - name: checkout branch for build
        uses: actions/checkout@v2

      - name: checkout branch with cache
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: ./gh-pages

      - name: copy cache for build book
        if: ${{ github.event.inputs.DisableCache != 'true' }}
        run: |
          cp -r ./gh-pages/_build/ ./qmlcourseRU/ || exit 0

      - name: set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: set up conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: 3.8
          conda-channels: anaconda, conda-forge, psi4
          activate-conda: true

      - name: set up poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: false
          virtualenvs-in-project: true

      # - name: copy cache dir for dependecies
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-poetry-modules
      #   with:
      #     path: .venv
      #     key: venv2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: install the main dependencies
        run: |
          conda create python=3.8 -p .venv -y
          conda install psi4 -c psi4 -p .venv -y

          poetry install

      # todo: replace with a more sane solution
      - name: install tensorflow_quantum # https://www.tensorflow.org/quantum/install
        run: |
          poetry run pip install --upgrade pip

          poetry run pip install -U tensorflow==2.5.1
          poetry run pip install -U tensorflow_quantum
          poetry run pip install -U tfq-nightly

      - name: build the book
        run: |
          export DWAVE_TOKEN="${{ secrets.DWAVE_TOKEN }}"
          poetry run jupyter-book build ./qmlcourseRU

      - name: fix sitemap
        run: |
          poetry run python ./tools/fix_sitemap.py ./qmlcourseRU/_build/html/sitemap.xml ./qmlcourseRU/_build/html/sitemap.xml

      - name: gh-pages action
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU

      - name: gh-pages action
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU/_build/html/
          publish_branch: pages-gh

#       - name: Build PDF file
#         run: |
#           poetry run jupyter-book build ./qmlcourseRU --builder pdfhtml
#           mv ./qmlcourseRU/_build/pdf/book.pdf ./qmlcourseRU/_build/pdf/all_book.pdf

#       - name: Deploy only pdf files
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./qmlcourseRU/_build/pdf/
#           destination_dir: pdf
